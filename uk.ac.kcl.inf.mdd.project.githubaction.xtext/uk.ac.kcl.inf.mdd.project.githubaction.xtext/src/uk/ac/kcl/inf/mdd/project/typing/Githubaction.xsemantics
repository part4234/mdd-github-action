import uk.ac.kcl.inf.mdd.project.validation.AbstractGithubactionValidator
import uk.ac.kcl.inf.mdd.project.githubaction.*;


system uk.ac.kcl.inf.mdd.project.typing.GithubactionTypeSystem

validatorExtends AbstractGithubactionValidator

//Aim to check 2 pushevent contradiction via assigning and checking
//their types, e.g. -branches: { master }, -branchesIgnore: { master }.


judgments {
    interpret |- Event expression ~> output Object
		cached
		error "cannot type " + stringRep(Object)
		// checks boolean validaiton of subtype
	subType |- GithubactionType left <: GithubactionType right
		error stringRep(left) + " is invalidated by the declaration of " + stringRep(right)    
}

axiom InterpretStringLiteral
    G |- String string ~> string.value


rule BranchStatementEquals
    G |- PushEvent eventType ~> Boolean result
from {
    empty |- eventType.branches.get(0) ~> var Object leftResult
    empty |- eventType.branchesIgnore.get(0) ~> var Object rightResult
    
    result = leftResult.toString == rightResult.toString
}



