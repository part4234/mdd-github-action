/**
 * generated by Xtext 2.20.0
 */
package uk.ac.kcl.inf.mdd.project.generator;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.eclipse.xtext.xbase.lib.StringExtensions;
import uk.ac.kcl.inf.mdd.project.githubaction.Repository;
import uk.ac.kcl.inf.mdd.project.githubaction.Workflow;
import uk.ac.kcl.inf.mdd.project.githubaction.WorkflowDispatchEvent;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class GithubactionGenerator extends AbstractGenerator {
  private static class Environment {
    private int counter = 0;
    
    public CharSequence getFreshVarName() {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("i_Â");
      int _plusPlus = this.counter++;
      _builder.append(_plusPlus);
      return _builder;
    }
    
    public int exit() {
      return this.counter--;
    }
  }
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _head = IterableExtensions.<EObject>head(resource.getContents());
    final Repository model = ((Repository) _head);
    fsa.generateFile(this.deriveStatsTargetFileNameFor(resource), this.doGenerateStats(model));
    final String className = this.deriveClassNameFor(resource);
    fsa.generateFile((className + ".java"), this.doGenerateClass(model, className));
  }
  
  public String deriveStatsTargetFileNameFor(final Resource resource) {
    return resource.getURI().appendFileExtension("txt").lastSegment();
  }
  
  public String doGenerateStats(final Repository program) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field sizeÂ is undefined for the type Iterator<Repository>"
      + "\nThe method or field sizeÂ is undefined for the type Iterator<Workflow>"
      + "\nThe method or field sizeÂ is undefined for the type Iterator<Event>"
      + "\nThe method or field sizeÂ is undefined for the type Iterator<Job>"
      + "\nThe method or field sizeÂ is undefined for the type Iterator<Step>");
  }
  
  public String deriveClassNameFor(final Resource resource) {
    String _xblockexpression = null;
    {
      final String origName = resource.getURI().lastSegment();
      String _firstUpper = StringExtensions.toFirstUpper(origName.substring(0, origName.indexOf(".")));
      _xblockexpression = (_firstUpper + "GithubAction");
    }
    return _xblockexpression;
  }
  
  /**
   * Below are parseable dispatch mathos for all grammar types
   */
  public String doGenerateClass(final Repository program, final String className) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field classNameÂ is undefined");
  }
  
  public String generateWorkflow(final Workflow workflow, final GithubactionGenerator.Environment env) {
    throw new Error("Unresolved compilation problems:"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'»\\r\\n\\t\'\'\'\'"
      + "\nno viable alternative at input \'dispatch\'"
      + "\nno viable alternative at input \'String\'"
      + "\nno viable alternative at input \'generateEvent\'"
      + "\nextraneous input \'event\' expecting \')\'"
      + "\nno viable alternative at input \'\'\'\'\\r\\n\\t\\t\\tpush:\\r\\n\\t\\tÂ«\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»]\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'»\\t\\r\\n\\t\'\'\'\'"
      + "\nno viable alternative at input \'dispatch\'"
      + "\nno viable alternative at input \'String\'"
      + "\nno viable alternative at input \'generateEvent\'"
      + "\nextraneous input \'event\' expecting \')\'"
      + "\nno viable alternative at input \'\'\'\'\\r\\n\\t\\t\\tpull:\\r\\n\\t\\tÂ«\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»]\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nextraneous input \'»\'\'\'\' expecting \'}\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nno viable alternative at input \'»\\t\\r\\n\\t\'\'\'\'"
      + "\nno viable alternative at input \'dispatch\'"
      + "\nno viable alternative at input \'String\'"
      + "\nno viable alternative at input \'generateEvent\'"
      + "\nextraneous input \'event\' expecting \')\'"
      + "\nno viable alternative at input \'\'\'\'\\r\\n\\t\\t\\tschedule:\\t\\r\\n\\t\\tÂ«\'"
      + "\nno viable alternative at input \'Â\'"
      + "\nmissing \'ENDIF\' at \'» \\r\\n\\t\\t\\r\\n\\t\'\'\'\'"
      + "\nThe method or field toStringÂ is undefined for the type String"
      + "\nThe method or field emptyÂ is undefined for the type EList<Event>"
      + "\nThe method or field onÂ is undefined for the type Workflow"
      + "\nThe method or field ENDFORÂ is undefined"
      + "\nThe method or field ENDIFÂ is undefined"
      + "\nThe method or field emptyÂ is undefined for the type EList<Job>"
      + "\nThe method or field jobsÂ is undefined for the type Workflow"
      + "\nThe method generateJob(Object) is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field ENDFORÂ is undefined"
      + "\nThe method or field ENDIFÂ is undefined"
      + "\nThe method or field def is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field def is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field Â is undefined"
      + "\nThe method or field def is undefined"
      + "\nThe method or field event is undefined"
      + "\nThe method or field event is undefined"
      + "\nThe method or field event is undefined"
      + "\nThe method or field event is undefined"
      + "\nThe method or field event is undefined"
      + "\nThe method or field event is undefined"
      + "\nType mismatch: cannot convert from Class<PushEvent> to WorkflowDispatchEvent"
      + "\nType mismatch: cannot convert from Class<PullRequestEvent> to WorkflowDispatchEvent"
      + "\nType mismatch: cannot convert from Class<ScheduleEvent> to WorkflowDispatchEvent"
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\n! cannot be resolved"
      + "\ngenerateEventÂ cannot be resolved"
      + "\n! cannot be resolved"
      + "\nbranches cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nbranches cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\nbranches cannot be resolved"
      + "\nget cannot be resolved"
      + "\ntags cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ntags cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\ntags cannot be resolved"
      + "\nget cannot be resolved"
      + "\nbranchesIgnore cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nbranchesIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\nbranchesIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\ntagsIgnore cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ntagsIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\ntagsIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\npaths cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\npaths cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\npaths cannot be resolved"
      + "\nget cannot be resolved"
      + "\npathsIgnore cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\npathsIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\npathsIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\nbranches cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nbranches cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\nbranches cannot be resolved"
      + "\nget cannot be resolved"
      + "\ntags cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ntags cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\ntags cannot be resolved"
      + "\nget cannot be resolved"
      + "\nbranchesIgnore cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nbranchesIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\nbranchesIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\ntagsIgnore cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ntagsIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\ntagsIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\npaths cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\npaths cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\npaths cannot be resolved"
      + "\nget cannot be resolved"
      + "\npathsIgnore cannot be resolved"
      + "\nempty cannot be resolved"
      + "\n! cannot be resolved"
      + "\n&& cannot be resolved"
      + "\npathsIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\n!== cannot be resolved"
      + "\npathsIgnore cannot be resolved"
      + "\nget cannot be resolved"
      + "\nhour cannot be resolved"
      + "\n!== cannot be resolved"
      + "\nminuteÂ cannot be resolved"
      + "\nhourÂ cannot be resolved"
      + "\ndayÂ cannot be resolved"
      + "\nmonthÂ cannot be resolved"
      + "\ndayOfWeekÂ cannot be resolved");
  }
  
  protected String _generateEvent(final WorkflowDispatchEvent event) {
    throw new Error("Unresolved compilation problems:"
      + "\nno viable alternative at input \'Â\'"
      + "\nmissing \'}\' at \'» Â«\'"
      + "\nThe method or field Â is undefined"
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects.");
  }
  
  public String generateEvent(final WorkflowDispatchEvent event) {
    return _generateEvent(event);
  }
}
